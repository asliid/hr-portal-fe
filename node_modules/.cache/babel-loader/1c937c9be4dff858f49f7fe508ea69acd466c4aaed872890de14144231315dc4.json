{"ast":null,"code":"var _jsxFileName = \"/Users/aslidongez/Desktop/staj/ik-prj/src/ZimmetYonetim/zimmetPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport * as zimmetServices from '../services/zimmetServices';\nimport * as envanterServices from '../services/envanterServices';\nimport * as personelServices from '../services/personelServices';\nimport ZimmetSelect from './ZimmetSelect';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ZimmetPage = () => {\n  _s();\n  const [zimmetList, setZimmetList] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedZimmet, setSelectedZimmet] = useState(null);\n  const [envanterList, setEnvanterList] = useState([]);\n  const [personelList, setPersonelList] = useState([]);\n  const columns = [{\n    id: 'zimmetId',\n    label: 'Zimmet Id',\n    minWidth: 170\n  }, {\n    id: 'statu',\n    label: 'Statu',\n    minWidth: 100\n  }, {\n    id: 'personelDto.personelSicilNo',\n    label: 'Personel SicilNo',\n    minWidth: 170\n  }, {\n    id: 'personelName',\n    label: 'Personel Adı',\n    minWidth: 170\n  }, {\n    id: 'personelSurname',\n    label: 'Personel Soyadı',\n    minWidth: 170\n  }, {\n    id: 'personelBirimi',\n    label: 'Personel Birimi',\n    minWidth: 170\n  }, {\n    id: 'personelGorevi',\n    label: 'Personel Görevi',\n    minWidth: 170\n  }, {\n    id: 'envanterTipi',\n    label: 'Envanter Tipi',\n    minWidth: 170\n  }, {\n    id: 'envanterMarkasi',\n    label: 'Envanter Markası',\n    minWidth: 170\n  }, {\n    id: 'envanterModeli',\n    label: 'Envanter Modeli',\n    minWidth: 170\n  }, {\n    id: 'actions',\n    label: 'Actions',\n    minWidth: 170\n  }];\n  useEffect(() => {\n    // Zimmet, envanter ve personel verilerini al\n    zimmetServices.getAllZimmet().then(response => setZimmetList(response.data));\n    envanterServices.getEnvanter().then(response => setEnvanterList(response.data));\n    personelServices.getPersonel().then(response => setPersonelList(response.data));\n  }, []);\n  const handleOpenDialog = () => {\n    setSelectedZimmet(null); // Yeni zimmet için\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setSelectedZimmet(null);\n  };\n  const handleSubmit = newZimmet => {\n    zimmetServices.createZimmet(newZimmet).then(() => {\n      // Yeniden verileri alarak güncellenmiş listeyi yükle\n      zimmetServices.getAllZimmet().then(response => setZimmetList(response.data));\n      handleCloseDialog();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleOpenDialog,\n      style: {\n        margin: '20px'\n      },\n      children: \"Yeni Zimmet Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: zimmetList.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: column.id === 'actions' ? /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleOpenDialog(row),\n                children: \"D\\xFCzenle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this) : row[column.id]\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this))\n          }, row.zimmetId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ZimmetSelect, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      onSubmit: handleSubmit,\n      envanterList: envanterList,\n      personelList: personelList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ZimmetPage, \"AtA+TbkkB7u+PMadTLmwwf4Wz8k=\");\n_c = ZimmetPage;\nexport default ZimmetPage;\nvar _c;\n$RefreshReg$(_c, \"ZimmetPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","zimmetServices","envanterServices","personelServices","ZimmetSelect","jsxDEV","_jsxDEV","Fragment","_Fragment","ZimmetPage","_s","zimmetList","setZimmetList","openDialog","setOpenDialog","selectedZimmet","setSelectedZimmet","envanterList","setEnvanterList","personelList","setPersonelList","columns","id","label","minWidth","getAllZimmet","then","response","data","getEnvanter","getPersonel","handleOpenDialog","handleCloseDialog","handleSubmit","newZimmet","createZimmet","children","variant","color","onClick","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","component","map","column","row","zimmetId","open","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/Users/aslidongez/Desktop/staj/ik-prj/src/ZimmetYonetim/zimmetPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport * as zimmetServices from '../services/zimmetServices';\nimport * as envanterServices from '../services/envanterServices';\nimport * as personelServices from '../services/personelServices';\nimport ZimmetSelect from './ZimmetSelect';\n\nconst ZimmetPage = () => {\n  const [zimmetList, setZimmetList] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedZimmet, setSelectedZimmet] = useState(null);\n  const [envanterList, setEnvanterList] = useState([]);\n  const [personelList, setPersonelList] = useState([]);\n  \n\n  const columns = [\n    { id: 'zimmetId', label: 'Zimmet Id', minWidth: 170 },\n    { id: 'statu', label: 'Statu', minWidth: 100 },\n    { id: 'personelDto.personelSicilNo', label: 'Personel SicilNo', minWidth: 170 },\n    { id: 'personelName', label: 'Personel Adı', minWidth: 170 },\n    { id: 'personelSurname', label: 'Personel Soyadı', minWidth: 170 },\n    { id: 'personelBirimi', label: 'Personel Birimi', minWidth: 170 },\n    { id: 'personelGorevi', label: 'Personel Görevi', minWidth: 170 },\n    { id: 'envanterTipi', label: 'Envanter Tipi', minWidth: 170 },\n    { id: 'envanterMarkasi', label: 'Envanter Markası', minWidth: 170 },\n    { id: 'envanterModeli', label: 'Envanter Modeli', minWidth: 170 },\n    { id: 'actions', label: 'Actions', minWidth: 170 },\n  ];\n\n  useEffect(() => {\n    // Zimmet, envanter ve personel verilerini al\n    zimmetServices.getAllZimmet().then(response => setZimmetList(response.data));\n    envanterServices.getEnvanter().then(response => setEnvanterList(response.data));\n    personelServices.getPersonel().then(response => setPersonelList(response.data));\n  }, []);\n\n  const handleOpenDialog = () => {\n    setSelectedZimmet(null); // Yeni zimmet için\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setSelectedZimmet(null);\n  };\n\n  const handleSubmit = (newZimmet) => {\n    zimmetServices.createZimmet(newZimmet).then(() => {\n      // Yeniden verileri alarak güncellenmiş listeyi yükle\n      zimmetServices.getAllZimmet().then(response => setZimmetList(response.data));\n      handleCloseDialog();\n    });\n  };\n\n  return (\n    <>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpenDialog} style={{ margin: '20px' }}>\n        Yeni Zimmet Ekle\n      </Button>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell key={column.id} style={{ minWidth: column.minWidth }}>\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {zimmetList.map((row) => (\n              <TableRow key={row.zimmetId}>\n                {columns.map((column) => (\n                  <TableCell key={column.id}>\n                    {column.id === 'actions' ? (\n                      <Button onClick={() => handleOpenDialog(row)}>Düzenle</Button>\n                    ) : (\n                      row[column.id]\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <ZimmetSelect\n        open={openDialog}\n        onClose={handleCloseDialog}\n        onSubmit={handleSubmit}\n        envanterList={envanterList}\n        personelList={personelList}\n      />\n    </>\n  );\n};\n\nexport default ZimmetPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}