{"ast":null,"code":"var _jsxFileName = \"/Users/aslidongez/Desktop/staj/ik-prj/src/ZimmetYonetim/zimmetPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Paper } from '@mui/material';\nimport * as zimmetServices from '../services/zimmetServices';\nimport ZimmetSelect from './ZimmetSelect';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ZimmetPage = () => {\n  _s();\n  const [zimmetList, setZimmetList] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedZimmet, setSelectedZimmet] = useState(null);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [order, setOrder] = useState({\n    columnName: '',\n    sort: true\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const columns = [{\n    field: 'zimmetId',\n    headerName: 'Zimmet Id',\n    minWidth: 170\n  }, {\n    field: 'statu',\n    headerName: 'Statu',\n    minWidth: 100\n  }, {\n    field: 'personelDto.personelSicilNo',\n    headerName: 'Personel SicilNo',\n    minWidth: 170\n  }, {\n    field: 'personelDto.personelName',\n    headerName: 'Personel Adı',\n    minWidth: 170\n  }, {\n    field: 'personelDto.personelSurname',\n    headerName: 'Personel Soyadı',\n    minWidth: 170\n  }, {\n    field: 'personelDto.personelBirimi',\n    headerName: 'Personel Birimi',\n    minWidth: 170\n  }, {\n    field: 'personelDto.personelGorevi',\n    headerName: 'Personel Görevi',\n    minWidth: 170\n  }, {\n    field: 'envanterDto.envanterTipi',\n    headerName: 'Envanter Tipi',\n    minWidth: 170\n  }, {\n    field: 'envanterDto.envanterMarkasi',\n    headerName: 'Envanter Markası',\n    minWidth: 170\n  }, {\n    field: 'envanterDto.envanterModeli',\n    headerName: 'Envanter Modeli',\n    minWidth: 170\n  }, {\n    field: '',\n    headerName: 'Actions',\n    minWidth: 170,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleOpenDialog(row),\n      children: \"D\\xFCzenle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 77\n    }, this)\n  }];\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const zimmetResponse = await zimmetServices.getAllZimmet();\n        setZimmetList(zimmetResponse.data);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleOpenDialog = (zimmet = null) => {\n    setSelectedZimmet(zimmet); // Yeni zimmet için null, düzenleme için mevcut zimmet\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setSelectedZimmet(null);\n  };\n  const handleSubmit = newZimmet => {\n    zimmetServices.createZimmet(newZimmet).then(() => {\n      zimmetServices.getAllZimmet().then(response => setZimmetList(response.data));\n      handleCloseDialog();\n    });\n  };\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage - 1); // Material-UI Pagination is 1-based, adjust to 0-based\n  };\n  const handleSortChange = newOrder => {\n    setOrder(newOrder);\n  };\n  const paginatedData = ownPaginationSort(order, zimmetList, pageSize);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleOpenDialog,\n      style: {\n        margin: '20px'\n      },\n      children: \"Yeni Zimmet Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(TableCustomPagination, {\n        columns: columns,\n        data: paginatedData,\n        totalSize: zimmetList.length,\n        onChangePage: handlePageChange,\n        page: page + 1 // Material-UI Pagination is 1-based\n        ,\n        pageSize: pageSize,\n        onSortChange: handleSortChange,\n        order: order,\n        isLoading: isLoading,\n        minWidth: 1700 // Adjust as needed\n        ,\n        maxHeight: 600 // Adjust as needed\n        ,\n        isSelected: false // Adjust as needed\n        ,\n        checkList: [] // Adjust as needed\n        ,\n        setCheckList: () => {} // Adjust as needed\n        ,\n        isSticky: true,\n        minHeight: 400 // Adjust as needed\n        ,\n        disabled: false // Adjust as needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ZimmetSelect, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ZimmetPage, \"v9Ww/foemteRocTnvvBaVaUv2J8=\");\n_c = ZimmetPage;\nexport default ZimmetPage;\nvar _c;\n$RefreshReg$(_c, \"ZimmetPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Paper","zimmetServices","ZimmetSelect","jsxDEV","_jsxDEV","Fragment","_Fragment","ZimmetPage","_s","zimmetList","setZimmetList","openDialog","setOpenDialog","selectedZimmet","setSelectedZimmet","page","setPage","pageSize","setPageSize","order","setOrder","columnName","sort","isLoading","setIsLoading","columns","field","headerName","minWidth","renderCell","row","onClick","handleOpenDialog","children","fileName","_jsxFileName","lineNumber","columnNumber","fetchData","zimmetResponse","getAllZimmet","data","zimmet","handleCloseDialog","handleSubmit","newZimmet","createZimmet","then","response","handlePageChange","event","newPage","handleSortChange","newOrder","paginatedData","ownPaginationSort","variant","color","style","margin","TableCustomPagination","totalSize","length","onChangePage","onSortChange","maxHeight","isSelected","checkList","setCheckList","isSticky","minHeight","disabled","open","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/Users/aslidongez/Desktop/staj/ik-prj/src/ZimmetYonetim/zimmetPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Paper } from '@mui/material';\nimport * as zimmetServices from '../services/zimmetServices';\nimport ZimmetSelect from './ZimmetSelect';\n\n\nconst ZimmetPage = () => {\n  const [zimmetList, setZimmetList] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedZimmet, setSelectedZimmet] = useState(null);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [order, setOrder] = useState({ columnName: '', sort: true });\n  const [isLoading, setIsLoading] = useState(true);\n\n  const columns = [\n    { field: 'zimmetId', headerName: 'Zimmet Id', minWidth: 170 },\n    { field: 'statu', headerName: 'Statu', minWidth: 100 },\n    { field: 'personelDto.personelSicilNo', headerName: 'Personel SicilNo', minWidth: 170 },\n    { field: 'personelDto.personelName', headerName: 'Personel Adı', minWidth: 170 },\n    { field: 'personelDto.personelSurname', headerName: 'Personel Soyadı', minWidth: 170 },\n    { field: 'personelDto.personelBirimi', headerName: 'Personel Birimi', minWidth: 170 },\n    { field: 'personelDto.personelGorevi', headerName: 'Personel Görevi', minWidth: 170 },\n    { field: 'envanterDto.envanterTipi', headerName: 'Envanter Tipi', minWidth: 170 },\n    { field: 'envanterDto.envanterMarkasi', headerName: 'Envanter Markası', minWidth: 170 },\n    { field: 'envanterDto.envanterModeli', headerName: 'Envanter Modeli', minWidth: 170 },\n    { field: '', headerName: 'Actions', minWidth: 170, renderCell: (row) => <Button onClick={() => handleOpenDialog(row)}>Düzenle</Button> },\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const zimmetResponse = await zimmetServices.getAllZimmet();\n        setZimmetList(zimmetResponse.data);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleOpenDialog = (zimmet = null) => {\n    setSelectedZimmet(zimmet); // Yeni zimmet için null, düzenleme için mevcut zimmet\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setSelectedZimmet(null);\n  };\n\n  const handleSubmit = (newZimmet) => {\n    zimmetServices.createZimmet(newZimmet).then(() => {\n      zimmetServices.getAllZimmet().then(response => setZimmetList(response.data));\n      handleCloseDialog();\n    });\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage - 1); // Material-UI Pagination is 1-based, adjust to 0-based\n  };\n\n  const handleSortChange = (newOrder) => {\n    setOrder(newOrder);\n  };\n\n  const paginatedData = ownPaginationSort(order, zimmetList, pageSize);\n\n  return (\n    <>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpenDialog} style={{ margin: '20px' }}>\n        Yeni Zimmet Ekle\n      </Button>\n\n      <Paper>\n        <TableCustomPagination\n          columns={columns}\n          data={paginatedData}\n          totalSize={zimmetList.length}\n          onChangePage={handlePageChange}\n          page={page + 1} // Material-UI Pagination is 1-based\n          pageSize={pageSize}\n          onSortChange={handleSortChange}\n          order={order}\n          isLoading={isLoading}\n          minWidth={1700} // Adjust as needed\n          maxHeight={600} // Adjust as needed\n          isSelected={false} // Adjust as needed\n          checkList={[]} // Adjust as needed\n          setCheckList={() => {}} // Adjust as needed\n          isSticky={true}\n          minHeight={400} // Adjust as needed\n          disabled={false} // Adjust as needed\n        />\n      </Paper>\n\n      <ZimmetSelect\n        open={openDialog}\n        onClose={handleCloseDialog}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default ZimmetPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}